{"cells":[{"cell_type":"markdown","id":"759d04ba","metadata":{"id":"759d04ba"},"source":["**1-Write a Python program to calculate the length of a string using 2 ways"]},{"cell_type":"code","execution_count":null,"id":"e434c950","metadata":{"id":"e434c950","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745006982500,"user_tz":420,"elapsed":40,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"4928e9d7-f431-414a-a0bb-8c5e45558019"},"outputs":[{"output_type":"stream","name":"stdout","text":["16\n"]}],"source":["s=\"my name is radwa\"\n","l=len(s)\n","print(l)"]},{"cell_type":"code","execution_count":null,"id":"7a2dfa32","metadata":{"id":"7a2dfa32","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745007949036,"user_tz":420,"elapsed":13,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"67673845-246a-443d-a52e-41e44999a786"},"outputs":[{"output_type":"stream","name":"stdout","text":["the length is equal 16\n"]}],"source":["s=\"my name is radwa\"\n","length = 0\n","\n","for i in range(len(s)):\n","    length += 1\n","print(\"the length is equal\", length)"]},{"cell_type":"markdown","id":"d7cc9da7","metadata":{"id":"d7cc9da7"},"source":["**2-Write a Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead (\"##Sample String : 'w3resource'\n","Expected Result : 'w3ce'\n","##Sample String : 'w3'\n","Expected Result : 'w3w3'\n","##Sample String : ' w'\n","Expected Result : Empty String)"]},{"cell_type":"code","execution_count":null,"id":"dafa9dd8","metadata":{"id":"dafa9dd8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745058987193,"user_tz":420,"elapsed":23,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"cfc37e55-2fb4-4d9c-ca6e-c270b10b28f0"},"outputs":[{"output_type":"stream","name":"stdout","text":["w3ce\n"]}],"source":["s=\"w3resource\"\n","if len(s)<2:\n","    print(\"\")\n","else:\n","    print(s[:2]+s[-2:])"]},{"cell_type":"markdown","id":"1534f956","metadata":{"id":"1534f956"},"source":["**3-Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing', add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. (Sample String : 'abc'\n","Expected Result : 'abcing')"]},{"cell_type":"code","execution_count":2,"id":"7ff8cec4","metadata":{"id":"7ff8cec4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745060277818,"user_tz":420,"elapsed":20,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"76049a56-77bd-453d-ec66-479cd6a18a15"},"outputs":[{"output_type":"stream","name":"stdout","text":["eatingly\n"]}],"source":["s=\"eating\"\n","if len(s)<3:\n","  print(s)\n","elif s.endswith(\"ing\"):\n","  print(s+\"ly\")\n","else:\n","\n","    print(s+\"ing\")"]},{"cell_type":"markdown","id":"1c0a6627","metadata":{"id":"1c0a6627"},"source":["**4-Write a Python function that takes a list of words and return the longest word and the length of the longest one\n","(Longest word: Exercises\n","Length of the longest word: 9)"]},{"cell_type":"code","execution_count":17,"id":"397341d9","metadata":{"id":"397341d9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745062740425,"user_tz":420,"elapsed":6,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"d2d9f6c1-1b8e-484a-cbb2-7515c3d2e8d2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Longest word: Exercises\n","Length of the longest word: 9\n"]}],"source":["\n","def longest_word(words):\n","    longest_word = \"\"\n","    for word in words:\n","        if len(word) > len(longest_word):\n","            longest_word = word\n","    print(\"Longest word:\", longest_word)\n","    print(\"Length of the longest word:\", len(longest_word))\n","\n","word_list = ['Python', 'Exercises', 'List', 'Function']\n","longest_word(word_list)\n"]},{"cell_type":"markdown","id":"53a03a6a","metadata":{"id":"53a03a6a"},"source":["**5-Write a Python program to change a given string to a newly string where the first and last chars have been exchanged using 2 ways (Sample String:abca  Expected Result:ebce)"]},{"cell_type":"code","execution_count":18,"id":"fd327d2a","metadata":{"id":"fd327d2a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745063504784,"user_tz":420,"elapsed":18,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"4f2d000a-7084-424c-9194-fe411afb504d"},"outputs":[{"output_type":"stream","name":"stdout","text":["ebce\n"]}],"source":["s=\"abca\"\n","print(\"e\"+s[1:3]+\"e\")"]},{"cell_type":"code","execution_count":21,"id":"285788b4","metadata":{"id":"285788b4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745063748900,"user_tz":420,"elapsed":17,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"a5a28b28-fc69-4602-e427-cce27ea2f900"},"outputs":[{"output_type":"stream","name":"stdout","text":["ebce\n"]}],"source":["s=\"abca\"\n","def exchange_chars(s):\n","    return 'e'+s[1:3]+'e'\n","print(exchange_chars(s))"]},{"cell_type":"markdown","id":"25f89808","metadata":{"id":"25f89808"},"source":["**6-Write a Python program to remove characters that have odd index values in a given string (Sample String:abca Expected Result:ac)"]},{"cell_type":"code","execution_count":32,"id":"05959bd7","metadata":{"id":"05959bd7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745064596190,"user_tz":420,"elapsed":15,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"61c33611-29d6-4236-cacc-fe8d8dc680c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["ac\n"]}],"source":["s=\"abca\"\n","print(s[0]+s[2])\n"]},{"cell_type":"markdown","id":"eb16e898","metadata":{"id":"eb16e898"},"source":["**7-Write a Python program to count the occurrences of each word in a given sentence (Sample String:amr and ahmed are frindes but amr is the tallest Expected Result:2)"]},{"cell_type":"code","source":["s=\"amr and ahmed are frindes but amr is the tallest Expected \"\n","c=s.count(\"amr\")\n","r=s.count(\"ahmed\")\n","print(r)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HdAXg51H9M1G","executionInfo":{"status":"ok","timestamp":1745065084959,"user_tz":420,"elapsed":6,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"fb9efed9-171f-4eb4-ce2f-999fa6b67c0c"},"id":"HdAXg51H9M1G","execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n"]}]},{"cell_type":"markdown","id":"4e8125f1","metadata":{"id":"4e8125f1"},"source":["**8-Write a Python script that takes input from the user and displays that input back in upper and lower cases"]},{"cell_type":"code","execution_count":38,"id":"66c8f778","metadata":{"id":"66c8f778","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745065219531,"user_tz":420,"elapsed":10028,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"3564fd63-9f07-480b-fb46-b45f1b6928ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter stringRaDwA\n","RADWA\n","radwa\n"]}],"source":["s=input(\"Enter string\")\n","s.upper()\n","s.lower()\n","print(s.upper())\n","print(s.lower())"]},{"cell_type":"markdown","id":"fcd68aa1","metadata":{"id":"fcd68aa1"},"source":["**9-Write a Python function to reverse a string if its length is a multiple of 4"]},{"cell_type":"code","execution_count":89,"id":"0671a931","metadata":{"id":"0671a931","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745066408398,"user_tz":420,"elapsed":5,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"aacbec3e-c766-4d73-ffbc-cc9bbaf0f845"},"outputs":[{"output_type":"stream","name":"stdout","text":["wdar\n"]}],"source":["def reverse_if_multiple_of_4(s):\n","    if len(s) % 4 == 0:\n","        return s[::-1]\n","    else:\n","        return s\n","s=\"radw\"\n","print(reverse_if_multiple_of_4(s))\n"]},{"cell_type":"markdown","id":"b577c68d","metadata":{"id":"b577c68d"},"source":["**10- Write a Python program to remove a newline in Python"]},{"cell_type":"code","execution_count":99,"id":"e0c6525a","metadata":{"id":"e0c6525a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745067995109,"user_tz":420,"elapsed":5,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"046efbb6-c04a-4304-a422-9ff54e444c39"},"outputs":[{"output_type":"stream","name":"stdout","text":["Hello there\n","Welcome to Python programming\n","Enjoy coding\n","Hello thereWelcome to Python programmingEnjoy coding\n"]}],"source":["s= \"Hello there\\nWelcome to Python programming\\nEnjoy coding\"\n","w = s.replace('\\n', '')\n","\n","print(s)\n","print(w)\n"]},{"cell_type":"markdown","id":"80db5ae0","metadata":{"id":"80db5ae0"},"source":["**11-Write a Python program to check whether a string starts with specified characters"]},{"cell_type":"code","execution_count":102,"id":"0cc4e03e","metadata":{"id":"0cc4e03e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745068566600,"user_tz":420,"elapsed":19160,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"68bc61bd-21c1-4ff8-cfe2-f74446adc723"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter stringmy name is radwa\n","enter charradwa\n","False\n"]}],"source":["s=input(\"enter string\")\n","x=input(\"enter char\")\n","print(s.startswith(x))"]},{"cell_type":"markdown","id":"593a68db","metadata":{"id":"593a68db"},"source":["**12- Write a Python program to add prefix text to all of the lines in a string"]},{"cell_type":"code","execution_count":122,"id":"d2e46ada","metadata":{"id":"d2e46ada","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108962774,"user_tz":420,"elapsed":32,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"4647457b-80a1-449c-837f-c3f86606d9d5"},"outputs":[{"output_type":"stream","name":"stdout","text":[">> Hello \n",">> MY name is\n",">> radwa\n"]}],"source":["  s= \"Hello \\nMY name is\\nradwa\"\n","prefix = \">> \"\n","lines = s.split('\\n')\n","lines = [prefix + line for line in lines]\n","s = '\\n'.join(lines)\n","print(s)"]},{"cell_type":"markdown","id":"86fa1543","metadata":{"id":"86fa1543"},"source":["**13-Write a Python program to print the following numbers up to 2 decimal places"]},{"cell_type":"code","execution_count":103,"id":"cd4a9d89","metadata":{"id":"cd4a9d89","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745069374226,"user_tz":420,"elapsed":12303,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"cd425ea5-aaa4-447e-b226-97baa103d979"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter number3.145625\n","3.15\n"]}],"source":["num=float(input(\"enter number\"))\n","print(f\"{num:.2f}\")"]},{"cell_type":"markdown","id":"452c0ab0","metadata":{"id":"452c0ab0"},"source":["**14-Write a Python program to print the following numbers up to 2 decimal places with a sign"]},{"cell_type":"code","execution_count":104,"id":"73e82479","metadata":{"id":"73e82479","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745069475073,"user_tz":420,"elapsed":7988,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"8ce7247d-801d-4434-d0d4-f4cf958c0c81"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter number3.143222\n","3.14\n"]}],"source":["num=float(input(\"enter number\"))\n","print(f\"{num:.2f}\")"]},{"cell_type":"markdown","id":"32b1811a","metadata":{"id":"32b1811a"},"source":["**15-Write a Python program to display a number with a comma separator"]},{"cell_type":"code","execution_count":105,"id":"f30fc0b6","metadata":{"id":"f30fc0b6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745069619095,"user_tz":420,"elapsed":10580,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"a8e3e269-2aab-4068-e9dd-06113ec3bbbf"},"outputs":[{"output_type":"stream","name":"stdout","text":["123456\n","123,456\n"]}],"source":["num=int(input())\n","print(f\"{num:,d}\")"]},{"cell_type":"markdown","id":"0477f487","metadata":{"id":"0477f487"},"source":["**16-Write a Python program to reverse a string using 2 ways"]},{"cell_type":"code","execution_count":106,"id":"aa8beec8","metadata":{"id":"aa8beec8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745069726444,"user_tz":420,"elapsed":14,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"6d03d754-934a-4208-e638-8ed4ecb73576"},"outputs":[{"output_type":"stream","name":"stdout","text":["awdar si eman ym\n"]}],"source":["s=\"my name is radwa\"\n","print(s[::-1])"]},{"cell_type":"markdown","id":"5afc3166","metadata":{"id":"5afc3166"},"source":[" **17-Write a Python program to count repeated characters in a string (hint:use dictionary)"]},{"cell_type":"code","execution_count":5,"id":"515a469c","metadata":{"id":"515a469c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745100119148,"user_tz":420,"elapsed":12946,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"3614002d-c673-4bab-bf17-9edf3c51d832"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter stringradwa yasser\n","{'r': 2, 'a': 3, 'd': 1, 'w': 1, ' ': 1, 'y': 1, 's': 2, 'e': 1}\n"]}],"source":["def count_characters(s):\n","  count_chars={}\n","  for char in s:\n","    if char in count_chars:\n","      count_chars[char]+=1\n","    else:\n","      count_chars[char] = 1\n","  return count_chars\n","s=input(\"enter string\")\n","print(count_characters(s))"]},{"cell_type":"markdown","id":"ae14e4e5","metadata":{"id":"ae14e4e5"},"source":["**18-Write a Python program to find the first non-repeating character in a given string"]},{"cell_type":"code","execution_count":18,"id":"d73778e5","metadata":{"id":"d73778e5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745100807789,"user_tz":420,"elapsed":8600,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"0672402a-6845-4973-b62a-bae149744ebb"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter stringradwa yasser ahmed\n","w\n"]}],"source":["def first_non_repeating_character(s):\n","  count_chars={}\n","  for char in s:\n","    if char in count_chars:\n","      count_chars[char]+=1\n","    else:\n","      count_chars[char] = 1\n","  for char in s:\n","    if count_chars[char] == 1:\n","      return char\n","  return None\n","s=input(\"enter string\")\n","result = first_non_repeating_character(s)\n","print(result)\n",""]},{"cell_type":"markdown","id":"3adf5669","metadata":{"id":"3adf5669"},"source":["**19-Write a Python program to remove spaces from a given string"]},{"cell_type":"code","execution_count":19,"id":"b4f22602","metadata":{"id":"b4f22602","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745100924194,"user_tz":420,"elapsed":12694,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"fae56d90-6184-4b39-dd31-363c00ad0d3d"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter stringR A D W A\n","RADWA\n"]}],"source":["s=input(\"enter string\")\n","r=s.replace(\" \",\"\")\n","print(r)\n"]},{"cell_type":"markdown","id":"734de60c","metadata":{"id":"734de60c"},"source":["**20-Write a Python program to count the number of non-empty substrings of a given string"]},{"cell_type":"code","execution_count":22,"id":"ef3f2274","metadata":{"id":"ef3f2274","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745101144722,"user_tz":420,"elapsed":14310,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"c496c55d-6307-4766-a3ee-3033df454e11"},"outputs":[{"output_type":"stream","name":"stdout","text":["enter stringradwa yasser ahmed\n","171\n"]}],"source":["def count_non_empty_substrings(s):\n","    count = 0\n","    for i in range(len(s)):\n","        for j in range(i, len(s)):\n","            count += 1\n","              return count\n","s=input(\"enter string\")\n","print(count_non_empty_substrings(s))"]},{"cell_type":"markdown","id":"509998e2","metadata":{"id":"509998e2"},"source":["**21-write a Python program to swap first and last element of any list."]},{"cell_type":"code","execution_count":24,"id":"68692d7f","metadata":{"id":"68692d7f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745101752619,"user_tz":420,"elapsed":15,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"6b827894-48d3-464c-86e5-7af6eceac02c"},"outputs":[{"output_type":"stream","name":"stdout","text":["[8, 4, 6, 2]\n"]}],"source":["l=[2,4,6,8]\n","l[0],l[3]=l[3],l[0]\n","print(l)"]},{"cell_type":"markdown","id":"959e0837","metadata":{"id":"959e0837"},"source":["**22-Given a list in Python and provided the positions of the elements, write a program to swap the two elements in the list. (Input : List = [23, 65, 19, 90], pos1 = 1, pos2 = 3\n","Output : [19, 65, 23, 90])"]},{"cell_type":"code","execution_count":127,"id":"225d8c6d","metadata":{"id":"225d8c6d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745109000731,"user_tz":420,"elapsed":16,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"57935dcf-0155-490c-eb58-1c2c43414ee8"},"outputs":[{"output_type":"stream","name":"stdout","text":["[23, 90, 19, 65]\n"]}],"source":["List = [23, 65, 19, 90]\n","pos1 = 1\n","pos2 = 3\n","List[pos1], List[pos2] = List[pos2], List[pos1]\n","print(List)"]},{"cell_type":"markdown","id":"66fc6682","metadata":{"id":"66fc6682"},"source":["**23- search for the all ways to know the length of the list"]},{"cell_type":"code","source":["items=[\"shoses\",\"clothes\",\"bags\",\"jeans\"]\n","l=len(items)\n","print(l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lYECnRN_NWS0","executionInfo":{"status":"ok","timestamp":1745102633142,"user_tz":420,"elapsed":45,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"049f031e-692c-4bf1-9d20-7987f395c48c"},"id":"lYECnRN_NWS0","execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["4\n"]}]},{"cell_type":"code","source":["items=[\"shoses\",\"clothes\",\"bags\",\"jeans\"]\n","count=0\n","for i in items:\n","  count+=1\n","  print(count)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"udk4pZlPOokN","executionInfo":{"status":"ok","timestamp":1745102986998,"user_tz":420,"elapsed":23,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"5d9e2d08-d267-400b-bd8b-fb5147766748"},"id":"udk4pZlPOokN","execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n"]}]},{"cell_type":"code","source":["\n","\n","items=[\"shoses\",\"clothes\",\"bags\",\"jeans\"]\n","l=sum(Counter(items).values())\n","print(l)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SlpJVOyvQAFF","executionInfo":{"status":"ok","timestamp":1745103176167,"user_tz":420,"elapsed":6,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"86d2786a-fc63-4e70-d240-595bfe7a2e3a"},"id":"SlpJVOyvQAFF","execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["4\n"]}]},{"cell_type":"code","execution_count":45,"id":"63ff8b43","metadata":{"id":"63ff8b43","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103300041,"user_tz":420,"elapsed":17,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"5d94dfc4-1b47-439c-c465-7dfca7b5e654"},"outputs":[{"output_type":"stream","name":"stdout","text":["9\n"]}],"source":["#24-write a Python code to find the Maximum number of list of numbers.\n","n=[1,3,5,7,9]\n","m=max(n)\n","print(m)"]},{"cell_type":"code","execution_count":46,"id":"1a89b9d3","metadata":{"id":"1a89b9d3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745103321490,"user_tz":420,"elapsed":18,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"5b20db54-f467-4301-94f6-2bc658d93812"},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}],"source":["#25-write a Python code to find the Minimum number of list of numbers.\n","n=[1,3,5,7,9]\n","m=min(n)\n","print(m)"]},{"cell_type":"markdown","id":"96822d96","metadata":{"id":"96822d96"},"source":["**26-search for if an elem is existing in list"]},{"cell_type":"code","execution_count":50,"id":"51ca5c9a","metadata":{"id":"51ca5c9a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745104388125,"user_tz":420,"elapsed":12,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"4df6e4b6-502e-4a2a-b419-d3c2616305aa"},"outputs":[{"output_type":"stream","name":"stdout","text":["element is exist\n"]}],"source":["def search_elem(lst,elem):\n","  if elem in lst:\n","    print(\"element is exist\")\n","  else:\n","    print(\"element dosnt exist\")\n","lst=[1,3,5,7,9]\n","elem=9\n","search_elem(lst,elem)\n",""]},{"cell_type":"markdown","id":"d9557da7","metadata":{"id":"d9557da7"},"source":["**27- clear python list using different ways"]},{"cell_type":"code","execution_count":51,"id":"b69858a3","metadata":{"id":"b69858a3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745104552820,"user_tz":420,"elapsed":13,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"cdb1ecdf-8b26-445e-b6ff-45f6e16e793d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[]\n"]}],"source":["l=[\"shoses\",\"clothes\",\"bags\",\"jeans\"]\n","l.clear()\n","print(l)"]},{"cell_type":"markdown","id":"52160e88","metadata":{"id":"52160e88"},"source":["**28-remove duplicated elements from a list"]},{"cell_type":"code","execution_count":52,"id":"5e362228","metadata":{"id":"5e362228","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745105039359,"user_tz":420,"elapsed":44,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"3cf90fc7-eef9-4197-9860-8e28deea7340"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'jeans', 'bags', 'clothes', 'shoses'}\n"]}],"source":["l=[\"shoses\",\"clothes\",\"bags\",\"jeans\",\"shoses\",\"clothes\"]\n","list=set(l)\n","print(list)"]},{"cell_type":"markdown","id":"282337f7","metadata":{"id":"282337f7"},"source":["**29-Given list values and keys list, convert these values to key value pairs in form of list of dictionaries. (Input : test_list = [“Gfg”, 3, “is”, 8], key_list = [“name”, “id”]\n","Output : [{‘name’: ‘Gfg’, ‘id’: 3}, {‘name’: ‘is’, ‘id’: 8}])"]},{"cell_type":"code","execution_count":58,"id":"4d4e2d28","metadata":{"id":"4d4e2d28","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745105489485,"user_tz":420,"elapsed":54,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"d54f7f38-1a10-455e-cd4f-c88f3c2dfaf1"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'name': 'Gfg', 'id': 3}, {'name': 'is', 'id': 8}]\n"]}],"source":["test_list = [\"Gfg\", 3, \"is\", 8]\n","key_list = [\"name\", \"id\"]\n","result = [dict(zip(key_list, test_list[i:i+2])) for i in range(0, len(test_list), 2)]\n","\n","print(result)"]},{"cell_type":"markdown","id":"c26b6e9f","metadata":{"id":"c26b6e9f"},"source":["**30-write a python program to count unique values inside a list using different ways"]},{"cell_type":"code","execution_count":60,"id":"72132667","metadata":{"id":"72132667","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745105733569,"user_tz":420,"elapsed":57,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"2edd8aa2-427d-44ae-f140-df3dcb6098a8"},"outputs":[{"output_type":"stream","name":"stdout","text":["5\n"]}],"source":["def count_unique_values(lst):\n","  unique_values = set(lst)\n","  return len(unique_values)\n","lst=[1,3,5,7,9,1,3,5,7,9]\n","print(count_unique_values(lst))"]},{"cell_type":"markdown","id":"fed6677c","metadata":{"id":"fed6677c"},"source":["**31-write a python program Extract all elements with Frequency greater than K (Input : test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8], K = 3\n","Output : [4, 3] )"]},{"cell_type":"code","execution_count":61,"id":"d81f3f9d","metadata":{"id":"d81f3f9d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745105933040,"user_tz":420,"elapsed":53,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"8a94356e-da9d-477d-f4d8-776ac3105aeb"},"outputs":[{"output_type":"stream","name":"stdout","text":["[3, 4]\n"]}],"source":["test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8]\n","K = 3\n","result = [elem for elem in set(test_list) if test_list.count(elem) > K]\n","\n","print(result)"]},{"cell_type":"markdown","id":"caca5224","metadata":{"id":"caca5224"},"source":["**32-write a python program to find the Strongest Neighbour (Input: 1 2 2 3 4 5\n","Output: 2 2 3 4 5)"]},{"cell_type":"code","execution_count":64,"id":"39fbd9b2","metadata":{"id":"39fbd9b2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745106205079,"user_tz":420,"elapsed":66,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"7c0c316b-3ecb-4634-9c17-1f8dfd82dc15"},"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 2, 3, 4, 5]\n"]}],"source":["input_list = [1, 2, 2, 3, 4, 5]\n","strongest_neighbors = []\n","for i in range(len(input_list) - 1):\n","    strongest_neighbors.append(max(input_list[i], input_list[i + 1]))\n","print(strongest_neighbors)"]},{"cell_type":"markdown","id":"a9fa8baf","metadata":{"id":"a9fa8baf"},"source":["**33-write a Python Program to print all Possible Combinations from the three Digits (Input: [1, 2, 3]\n","Output:\n","1 2 3 ##\n","1 3 2 ##\n","2 1 3 ##\n","2 3 1 ##\n","3 1 2 ##\n","3 2 1)"]},{"cell_type":"code","execution_count":86,"id":"8c520a76","metadata":{"id":"8c520a76","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745106877566,"user_tz":420,"elapsed":17,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"3cd84375-a6d2-4c7d-d6f0-51975731e6d4"},"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 ##\n","1 3 2 ##\n","2 1 3 ##\n","2 3 1 ##\n","3 1 2 ##\n","3 2 1 ##\n"]}],"source":["from itertools import permutations\n","\n","n = [1, 2, 3]\n","\n","all_combinations = permutations(n)\n","\n","for a in all_combinations:\n","    print(*a, \"##\")\n"]},{"cell_type":"markdown","id":"5288bb89","metadata":{"id":"5288bb89"},"source":["**34-write a Python program to find all the Combinations in the list with the given condition (Input: test_list = [1,2,3]\n","Output:\n"," [1], [1, 2], [1, 2, 3], [1, 3]\n"," [2], [2, 3], [3])"]},{"cell_type":"code","execution_count":87,"id":"59b89646","metadata":{"id":"59b89646","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107080196,"user_tz":420,"elapsed":50,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"b058bc84-b82d-4f5b-dcdb-f3777e8417ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1], [1, 2], [1, 2, 3], [2], [2, 3], [3]]\n"]}],"source":["test_list = [1,2,3]\n","result = []\n","for i in range(len(test_list)):\n","    for j in range(i+1, len(test_list)+1):\n","        result.append(test_list[i:j])\n","\n","print(result)\n"]},{"cell_type":"markdown","id":"39973705","metadata":{"id":"39973705"},"source":["**35-write a Python program to get all unique combinations of two Lists (List_1 = [\"a\",\"b\"]\n","List_2 = [1,2]\n","Unique_combination = [[('a',1),('b',2)],[('a',2),('b',1)]] )"]},{"cell_type":"code","execution_count":88,"id":"8c4ba22b","metadata":{"id":"8c4ba22b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107146643,"user_tz":420,"elapsed":29,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"683c719e-d0e3-45bb-fba9-eaf04b3fbb46"},"outputs":[{"output_type":"stream","name":"stdout","text":["[('a', 1), ('a', 2), ('b', 1), ('b', 2)]\n"]}],"source":["List_1 = [\"a\",\"b\"]\n","List_2 = [1,2]\n","Unique_combination = [(a, b) for a in List_1 for b in List_2]\n","\n","print(Unique_combination)"]},{"cell_type":"markdown","id":"25199af5","metadata":{"id":"25199af5"},"source":["**36-Remove all the occurrences of an element from a list in Python (Input : 1 1 2 3 4 5 1 2 1\n","\n","**Output : 2 3 4 5 2)"]},{"cell_type":"code","execution_count":90,"id":"6dc4c2ba","metadata":{"id":"6dc4c2ba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107353503,"user_tz":420,"elapsed":7,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"5a8c7e72-bcbf-45b7-ea28-72213209088d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3, 4, 5, 2]\n"]}],"source":["l=[ 1, 1, 2, 3, 4, 5 ,1 ,2, 1]\n","elem_to_remove=1\n","new_list=[elem for elem in l if elem != elem_to_remove]\n","print(new_list)\n"]},{"cell_type":"markdown","id":"bf1a3c93","metadata":{"id":"bf1a3c93"},"source":["**37-write a python program to Replace index elements with elements in Other List (The original list 1 is : [‘Gfg’, ‘is’, ‘best’] The original list 2 is : [0, 1, 2, 1, 0, 0, 0, 2, 1, 1, 2, 0] The lists after index elements replacements is : [‘Gfg’, ‘is’, ‘best’, ‘is’, ‘Gfg’, ‘Gfg’, ‘Gfg’, ‘best’, ‘is’, ‘is’, ‘best’, ‘Gfg’])"]},{"cell_type":"code","execution_count":120,"id":"fdd66a71","metadata":{"id":"fdd66a71","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108851185,"user_tz":420,"elapsed":67,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"1321364f-d4ed-40b9-9ddb-b24c05819563"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Gfg', 'is', 'best', 'is', 'Gfg', 'Gfg', 'Gfg', 'best', 'is', 'is', 'best', 'Gfg']\n"]}],"source":["l1= ['Gfg', 'is', 'best']\n","l2= [0, 1, 2, 1, 0, 0, 0, 2, 1, 1, 2, 0]\n","result = [l1[i] for i in l2]\n","\n","print(result)"]},{"cell_type":"markdown","id":"af0f56e8","metadata":{"id":"af0f56e8"},"source":["**38- write python program to Retain records with N occurrences of K(Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 2\n","Output : [(4, 5, 5, 4)]\n","Input : test_list = [(4, 5, 5, 4), (5, 4, 3)], K = 5, N = 3\n","Output : [] )"]},{"cell_type":"code","execution_count":121,"id":"67b06671","metadata":{"id":"67b06671","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108879741,"user_tz":420,"elapsed":56,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"e69f110d-05bd-48eb-a180-f4a265528470"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(4, 5, 5, 4)]\n"]}],"source":[" test_list = [(4, 5, 5, 4), (5, 4, 3)]\n"," K = 5\n"," N = 2\n"," result = [record for record in test_list if record.count(K) == N]\n","\n","print(result)"]},{"cell_type":"markdown","id":"de76f183","metadata":{"id":"de76f183"},"source":["**39-write a Python Program to Sort the list according to the column using lambda\n","array = [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","Output :\n","Sorted array specific to column 0, [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","Sorted array specific to column 1, [[2, 1, 2], [3, 2, 1], [1, 3, 3]]\n","Sorted array specific to column 2, [[3, 2, 1], [2, 1, 2], [1, 3, 3]]"]},{"cell_type":"code","execution_count":119,"id":"dc883308","metadata":{"id":"dc883308","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108792386,"user_tz":420,"elapsed":50,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"28d1c850-6864-480a-c1e3-dd3687132fad"},"outputs":[{"output_type":"stream","name":"stdout","text":["Sorted array specific to column 0, [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","Sorted array specific to column 1, [[2, 1, 2], [3, 2, 1], [1, 3, 3]]\n","Sorted array specific to column 2, [[3, 2, 1], [2, 1, 2], [1, 3, 3]]\n"]}],"source":["array = [[1, 3, 3], [2, 1, 2], [3, 2, 1]]\n","for i in range(len(array[0])):\n","    sorted_array = sorted(array, key=lambda x: x[i])\n","    print(f\"Sorted array specific to column {i}, {sorted_array}\")"]},{"cell_type":"code","execution_count":118,"id":"d2e7b31f","metadata":{"id":"d2e7b31f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108728627,"user_tz":420,"elapsed":25,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"32231d02-8720-4eb7-ef31-ae222910d1c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'rajnish': 9, 'ravi': 10, 'sanjeev': 15, 'suraj': 32, 'yash': 2}\n"]}],"source":["\"\"\"40- write a program to Sort Python Dictionaries by Key or Value\n","Input:\n","{'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}\n","\n","Output:\n","{'rajnish': 9, 'ravi': 10, 'sanjeev': 15, 'suraj': 32, 'yash': 2}\"\"\"\n","d={'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}\n","sorted_dict = dict(sorted(d.items()))\n","print(sorted_dict)"]},{"cell_type":"markdown","id":"ec63c23a","metadata":{"id":"ec63c23a"},"source":["**41-write python program to Remove keys with Values Greater than K ( Including mixed values )\n","nput : test_dict = {‘Gfg’ : 3, ‘is’ : 7, ‘best’ : 10, ‘for’ : 6, ‘geeks’ : ‘CS’},\n","K = 7\n","Output : {‘Gfg’ : 3, ‘for’ : 6, ‘geeks’ : ‘CS’}"]},{"cell_type":"code","execution_count":117,"id":"e39c3a40","metadata":{"id":"e39c3a40","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108670675,"user_tz":420,"elapsed":58,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"0c616c75-7b90-4834-f699-e3fb298a7f7f"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'Gfg': 3, 'is': 7, 'for': 6}\n"]}],"source":["test_dict = {'Gfg' : 3, 'is' : 7, 'best' : 10, 'for' : 6, 'geeks' : 'CS'}\n","K = 7\n","result = {key: value for key, value in test_dict.items() if isinstance(value, int) and value <= K}\n","\n","print(result)"]},{"cell_type":"markdown","id":"f143f0fe","metadata":{"id":"f143f0fe"},"source":["**42-Write a Python program to concatenate the following dictionaries to create a new one\n","\n","Sample Dictionary :\n","dic1={1:10, 2:20}\n","dic2={3:30, 4:40}\n","dic3={5:50,6:60}\n","Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}"]},{"cell_type":"code","execution_count":115,"id":"74ffdfea","metadata":{"id":"74ffdfea","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108516062,"user_tz":420,"elapsed":55,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"573317c9-4edf-4325-cd1e-994e17cd0593"},"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}\n"]}],"source":["dic1={1:10, 2:20}\n","dic2={3:30, 4:40}\n","dic3={5:50,6:60}\n","dic4=dic1.copy()\n","dic4.update(dic2)\n","dic4.update(dic3)\n","print(dic4)"]},{"cell_type":"markdown","id":"fb04c93c","metadata":{"id":"fb04c93c"},"source":["**43-Write a Python program to iterate over dictionaries using for loops"]},{"cell_type":"code","execution_count":114,"id":"6aebc470","metadata":{"id":"6aebc470","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108474310,"user_tz":420,"elapsed":20,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"6bea5f24-6bbb-4448-ff7c-3bc40475ae9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["ravi 10\n","rajnish 9\n","sanjeev 15\n","yash 2\n","suraj 32\n"]}],"source":["d={'ravi': 10, 'rajnish': 9, 'sanjeev': 15, 'yash': 2, 'suraj': 32}\n","for key, value in d.items():\n","    print(key, value)"]},{"cell_type":"markdown","id":"5f491a9d","metadata":{"id":"5f491a9d"},"source":["**44- Write a Python script to merge two Python dictionaries"]},{"cell_type":"code","execution_count":113,"id":"b8a14028","metadata":{"id":"b8a14028","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108442879,"user_tz":420,"elapsed":11,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"478081d1-87c9-4a90-b4b0-3345ad130025"},"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3, 4, 5, 6}\n"]}],"source":["d1={1,2,3}\n","d2={4,5,6}\n","d3=d1.union(d2)\n","print(d3)"]},{"cell_type":"markdown","id":"216fc72d","metadata":{"id":"216fc72d"},"source":["**45-Write a Python program to get the maximum and minimum values of a dictionary values"]},{"cell_type":"code","execution_count":112,"id":"d6883f5f","metadata":{"id":"d6883f5f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108420880,"user_tz":420,"elapsed":26,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"9f14ab92-7847-4eca-af37-56ecc9659da6"},"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","1\n"]}],"source":["d={1,2,3,4,5,6,7,8,9,10}\n","print(max(d))\n","print(min(d))"]},{"cell_type":"markdown","id":"b6a53011","metadata":{"id":"b6a53011"},"source":["**46- Write a Python program to drop empty items from a given dictionary.\n","Original Dictionary:\n","{'c1': 'Red', 'c2': 'Green', 'c3': None}\n","New Dictionary after dropping empty items:\n","{'c1': 'Red', 'c2': 'Green'}"]},{"cell_type":"code","execution_count":111,"id":"b5c6fecf","metadata":{"id":"b5c6fecf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108387138,"user_tz":420,"elapsed":31,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"c947b3e9-9ca4-4aca-86e8-5b61938dd5d5"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'c1': 'Red', 'c2': 'Green'}\n"]}],"source":["d={'c1': 'Red', 'c2': 'Green', 'c3': None}\n","new_dict = {key: value for key, value in d.items() if value is not None}\n","\n","print(new_dict)"]},{"cell_type":"markdown","id":"46d718c7","metadata":{"id":"46d718c7"},"source":["**47-Write a Python program to create a tuple of numbers and print one item"]},{"cell_type":"code","execution_count":110,"id":"13216ff5","metadata":{"id":"13216ff5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108330378,"user_tz":420,"elapsed":7,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"e6f53a3f-42a8-4ac6-c21d-48542366145a"},"outputs":[{"output_type":"stream","name":"stdout","text":["apple\n"]}],"source":["t=(\"apple\",\"banana\",\"orange\",\"grap\")\n","print(t[0])"]},{"cell_type":"markdown","id":"2be5b56b","metadata":{"id":"2be5b56b"},"source":["**48-Write a Python program to unpack a tuple into several variables"]},{"cell_type":"code","execution_count":109,"id":"595f44be","metadata":{"id":"595f44be","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108250406,"user_tz":420,"elapsed":13,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"519c0df6-5029-43a1-b187-a0952531d38c"},"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n"]}],"source":["t=(1,2,3,4,5)\n","a,b,c,d,e=t\n","print(a)\n","print(b)\n","print(c)\n","print(d)\n","print(e)"]},{"cell_type":"markdown","id":"392388a7","metadata":{"id":"392388a7"},"source":["**49-Write a Python program to add an item to a tuple"]},{"cell_type":"code","execution_count":108,"id":"54cc092e","metadata":{"id":"54cc092e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108223830,"user_tz":420,"elapsed":20,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"04dd0250-3f52-435d-9eff-a289560d28a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3, 4, 5, 6)\n"]}],"source":["t=(1,2,3,4,5)\n","t=t+(6,)\n","print(t)"]},{"cell_type":"markdown","id":"3e8fd124","metadata":{"id":"3e8fd124"},"source":["**50-Write a Python program to convert a tuple to a string"]},{"cell_type":"code","execution_count":91,"id":"92a71ddc","metadata":{"id":"92a71ddc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107442011,"user_tz":420,"elapsed":17,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"28a7fe57-5ff4-4634-eb2c-ee1bba7ebf94"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3, 4, 5)\n"]}],"source":["t=(1,2,3,4,5)\n","s=str(t)\n","print(s)"]},{"cell_type":"markdown","id":"f4f64ef4","metadata":{"id":"f4f64ef4"},"source":["**51-Write a Python program to convert a list to a tuple"]},{"cell_type":"code","execution_count":92,"id":"210d56d3","metadata":{"id":"210d56d3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107482829,"user_tz":420,"elapsed":21,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"cb602d57-30fd-4b60-b992-b6915784ca21"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3, 4, 5)\n"]}],"source":["l={1,2,3,4,5}\n","t=tuple(l)\n","print(t)"]},{"cell_type":"markdown","id":"b1e00ef7","metadata":{"id":"b1e00ef7"},"source":["**52-Write a Python program to reverse a tuple"]},{"cell_type":"code","execution_count":93,"id":"f45bfdc7","metadata":{"id":"f45bfdc7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107523848,"user_tz":420,"elapsed":47,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"4dae2512-9283-48c2-a44a-dce0b27d9366"},"outputs":[{"output_type":"stream","name":"stdout","text":["('E', 'D', 'C', 'B', 'A')\n"]}],"source":["t=('A','B','C','D','E')\n","r=t[::-1]\n","print(r)"]},{"cell_type":"markdown","id":"3cd347d1","metadata":{"id":"3cd347d1"},"source":["**53-Write a Python program to replace the last value of tuples in a list.\n","Sample list: [(10, 20, 40), (40, 50, 60), (70, 80, 90)]\n","Expected Output: [(10, 20, 100), (40, 50, 100), (70, 80, 100)]"]},{"cell_type":"code","execution_count":95,"id":"3c4a2a4c","metadata":{"id":"3c4a2a4c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107655032,"user_tz":420,"elapsed":23,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"35cb66b3-cb02-48a4-e39f-a8d791b58d51"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(10, 20, 100), (10, 30, 100), (10, 40, 100)]\n"]}],"source":["s=[(10,20,30),(10,30,40),(10,40,20)]\n","for i in range(len(s)):\n","    s[i]=s[i][:-1]+(100,)\n","print(s)\n"]},{"cell_type":"markdown","id":"76bb7b39","metadata":{"id":"76bb7b39"},"source":["**54-Write a Python program to convert a given string list to a tuple\n","Original string: python 3.0\n","<class 'str'>\n","Convert the said string to a tuple:\n","('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0')"]},{"cell_type":"code","execution_count":96,"id":"51951937","metadata":{"id":"51951937","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107727627,"user_tz":420,"elapsed":23,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"22efc5cf-b26b-4b65-be95-b06d70460503"},"outputs":[{"output_type":"stream","name":"stdout","text":["('p', 'y', 't', 'h', 'o', 'n', 'o')\n"]}],"source":["l=['p','y','t','h','o','n','o']\n","t=tuple(l)\n","print(t)"]},{"cell_type":"markdown","id":"5a1d5d97","metadata":{"id":"5a1d5d97"},"source":["**55-Write a Python program to calculate the average value of the numbers in a given tuple of tuples"]},{"cell_type":"code","execution_count":98,"id":"834e7992","metadata":{"id":"834e7992","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107825993,"user_tz":420,"elapsed":50,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"633a3e8f-e227-4b7e-9ed9-59803676209a"},"outputs":[{"output_type":"stream","name":"stdout","text":["5.0\n"]}],"source":["s = (1, 2, 3, 4, 5, 6, 7, 8, 9)\n","avg = sum(s) / len(s)\n","print(avg)"]},{"cell_type":"markdown","id":"51edab9c","metadata":{"id":"51edab9c"},"source":["**56-Write a Python program to add member(s) to a set."]},{"cell_type":"code","execution_count":99,"id":"2b65df79","metadata":{"id":"2b65df79","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107859255,"user_tz":420,"elapsed":46,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"b3561b43-28c1-45cb-af7b-12bcbe16d79e"},"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3, 4, 5, 6}\n"]}],"source":["s={1,2,3,4,5}\n","s.add(6)\n","print(s)"]},{"cell_type":"markdown","id":"965590cc","metadata":{"id":"965590cc"},"source":["**57-Write a Python program to remove an item from a set if it is present in the set."]},{"cell_type":"code","execution_count":100,"id":"866bab28","metadata":{"id":"866bab28","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107948037,"user_tz":420,"elapsed":47,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"08fdc691-122a-4488-87bc-9114391150bb"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'C', 'D', 'B'}\n"]}],"source":["s={'A','B','C','D'}\n","s.remove('A')\n","print(s)"]},{"cell_type":"markdown","id":"2b7cfed1","metadata":{"id":"2b7cfed1"},"source":["**58-Write a Python program to create an intersection,union,difference and symmetric difference of sets"]},{"cell_type":"code","execution_count":101,"id":"7f94b7fe","metadata":{"id":"7f94b7fe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745107997890,"user_tz":420,"elapsed":17,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"dba124d2-d469-4e65-f069-ab8854182291"},"outputs":[{"output_type":"stream","name":"stdout","text":["{2, 4, 6, 8, 9}\n","{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\n","{10}\n","{1, 3, 5, 7, 10}\n"]}],"source":["a={2,4,6,8,9,10}\n","b={1,2,3,4,5,6,7,8,9}\n","print(a.intersection(b))\n","print(a.union(b))\n","print(a.difference(b))\n","print(a.symmetric_difference(b))"]},{"cell_type":"markdown","id":"b94931e2","metadata":{"id":"b94931e2"},"source":["**59-Write a Python program to find the maximum and minimum values in a set"]},{"cell_type":"code","execution_count":102,"id":"203f9600","metadata":{"id":"203f9600","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108022254,"user_tz":420,"elapsed":10,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"8f179bb6-405e-41b7-cc22-b8b33afc7934"},"outputs":[{"output_type":"stream","name":"stdout","text":["9\n","1\n"]}],"source":["set={1,2,3,4,5,6,7,8,9}\n","print(max(set))\n","print(min(set))"]},{"cell_type":"markdown","id":"255fd554","metadata":{"id":"255fd554"},"source":["**60- Write a Python program that finds all pairs of elements in a list whose sum is equal to a given value."]},{"cell_type":"code","execution_count":107,"id":"c2d94e1f","metadata":{"id":"c2d94e1f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745108160532,"user_tz":420,"elapsed":14,"user":{"displayName":"Radwa Yasser","userId":"08202378210473405174"}},"outputId":"e87add06-88bd-4616-9de1-5236041e412d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[(1, 9), (2, 8), (3, 7), (4, 6)]\n"]}],"source":[" def find_pairs(numbers, target): # Change 'list' to 'numbers'\n","    pairs = []\n","\n","    for i in range(len(numbers)):\n","        for j in range(i + 1, len(numbers)):\n","            if numbers[i] + numbers[j] == target:  # Use 'numbers'\n","                pairs.append((numbers[i], numbers[j]))\n","    return pairs\n","\n","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]  # Define the list\n","target = 10\n","pairs = find_pairs(numbers, target)  # Call with 'numbers'\n","print(pairs)"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"LTyD0z70PSUT"},"id":"LTyD0z70PSUT","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"},"colab":{"provenance":[{"file_id":"1YUxpqN_8cdy_o0FCwl1BlJ2rmJ738eWJ","timestamp":1745059080491},{"file_id":"1_-3EQ7j8ysNm0dlIy44jhvoeA0u8p9-P","timestamp":1742653128480}]}},"nbformat":4,"nbformat_minor":5}